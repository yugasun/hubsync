name: hubsync

on:
  issues:
    types: [opened]

jobs:
  mirror_transition:
    runs-on: ubuntu-latest
    if: contains(github.event.issue.labels.*.name, 'hubsync')
    steps:
      - name: Clean up environment
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"

      - name: Check out repository
        uses: actions/checkout@v3

      - name: Setup Golang
        uses: actions/setup-go@v5
        with:
          go-version: 1.21
      - name: Setup Golang caches
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-golang-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-golang-

      - name: Run Go script
        run: |
          go run main.go \
            --username=${{ secrets.DOCKER_USERNAME }} \
            --password=${{ secrets.DOCKER_PASSWORD }} \
            --repository=${{ secrets.DOCKER_REPOSITORY }} \
            --namespace=${{ secrets.DOCKER_NAMESPACE }} \
            --content='${{ github.event.issue.body }}' \
            --maxContent=11

      - name: Comment with output
        if: ${{ hashFiles('output.log') }}
        uses: actions/github-script@v5
        with:
          script: |
            const fs = require('fs');
            const data = fs.readFileSync('output.log', 'utf8');
            const days = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"];
            const body = `You can run the following command to sync images:\n\n\`\`\`shell\n${data}\n\`\`\`\n\nHope this helps. Happy ${days[new Date().getDay()]}!`;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });

      - name: Label issue as success
        if: ${{ success() }}
        uses: actions/github-script@v5
        with:
          script: |
            github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['success']
            });

      - name: Label issue as failure and comment
        if: ${{ failure() }}
        uses: actions/github-script@v5
        with:
          script: |
            github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['failure']
            });
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `[Build failed, click to view details](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})`
            });
