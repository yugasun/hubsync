name: Publish Release

on:
  workflow_call:
    inputs:
      version:
        description: "Version to publish"
        required: true
        type: string

jobs:
  publish:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ inputs.version }}

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: hubsync-*
          path: dist
          merge-multiple: true

      - name: Prepare release assets
        run: |
          mkdir -p release_assets

          # Debug downloaded files
          echo "=== Contents of dist directory ==="
          find dist -type f | sort

          # Copy all binary assets to release_assets directory
          find dist -type f -name "hubsync-*" | xargs -I{} cp {} release_assets/

          # Create convenience symlinks for install script compatibility
          for os in linux darwin windows; do
            for arch in amd64 arm64; do
              # Skip windows-arm64 which was excluded in the build matrix
              if [ "$os" = "windows" ] && [ "$arch" = "arm64" ]; then
                continue
              fi
              
              if [ "$os" = "windows" ]; then
                # For Windows, handle .exe extension
                if [ -f "release_assets/hubsync-${os}-${arch}.exe" ]; then
                  echo "Creating latest symlink for ${os}-${arch}.exe"
                  cp "release_assets/hubsync-${os}-${arch}.exe" "release_assets/hubsync-latest-${os}-${arch}.exe"
                else
                  echo "Missing Windows binary: hubsync-${os}-${arch}.exe"
                fi
              else
                # For Linux and macOS
                if [ -f "release_assets/hubsync-${os}-${arch}" ]; then
                  echo "Creating latest symlink for ${os}-${arch}"
                  cp "release_assets/hubsync-${os}-${arch}" "release_assets/hubsync-latest-${os}-${arch}"
                else
                  echo "Missing binary: hubsync-${os}-${arch}"
                fi
              fi
            done
          done

          echo "=== Final release assets ==="
          ls -la release_assets/

      - name: Generate release notes
        run: |
          VERSION="${{ inputs.version }}"

          echo "## HubSync Release ${VERSION}" > release_notes.md
          echo "" >> release_notes.md
          echo "### Changes" >> release_notes.md

          # Generate changelog
          PREV_TAG=$(git describe --tags --abbrev=0 ${VERSION}^ 2>/dev/null || echo "")
          if [ -n "$PREV_TAG" ]; then
            echo "Generating changelog from $PREV_TAG to $VERSION"
            git log ${PREV_TAG}..${VERSION} --pretty=format:"- %s" --no-merges >> release_notes.md
          else
            echo "No previous tag found, using full history"
            git log ${VERSION} --pretty=format:"- %s" --no-merges >> release_notes.md
          fi

          echo "" >> release_notes.md
          echo "### Installation" >> release_notes.md
          echo '```bash' >> release_notes.md
          echo 'curl -fsSL https://raw.githubusercontent.com/yugasun/hubsync/refs/heads/main/install.sh | bash' >> release_notes.md
          echo '```' >> release_notes.md

          cat << EOF >> release_notes.md

          ### Available Binaries

          Platform | Architecture | Download Link | SHA256
          ---------|--------------|---------------|-------
          Linux | amd64 | [hubsync-linux-amd64](https://github.com/yugasun/hubsync/releases/download/${VERSION}/hubsync-linux-amd64) | \`$(cat release_assets/hubsync-linux-amd64.sha256 | cut -d ' ' -f1)\`
          Linux | arm64 | [hubsync-linux-arm64](https://github.com/yugasun/hubsync/releases/download/${VERSION}/hubsync-linux-arm64) | \`$(cat release_assets/hubsync-linux-arm64.sha256 | cut -d ' ' -f1)\`
          macOS | amd64 | [hubsync-darwin-amd64](https://github.com/yugasun/hubsync/releases/download/${VERSION}/hubsync-darwin-amd64) | \`$(cat release_assets/hubsync-darwin-amd64.sha256 | cut -d ' ' -f1)\`
          macOS | arm64 | [hubsync-darwin-arm64](https://github.com/yugasun/hubsync/releases/download/${VERSION}/hubsync-darwin-arm64) | \`$(cat release_assets/hubsync-darwin-arm64.sha256 | cut -d ' ' -f1)\`
          Windows | amd64 | [hubsync-windows-amd64.exe](https://github.com/yugasun/hubsync/releases/download/${VERSION}/hubsync-windows-amd64.exe) | \`$(cat release_assets/hubsync-windows-amd64.exe.sha256 | cut -d ' ' -f1)\`

          ### Docker
          \`\`\`bash
          docker pull yugasun/hubsync:${VERSION#v}
          \`\`\`

          ### Homebrew
          \`\`\`bash
          brew install yugasun/tap/hubsync
          \`\`\`
          EOF

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          body_path: release_notes.md
          files: release_assets/*
          tag_name: ${{ inputs.version }}
          draft: false
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
