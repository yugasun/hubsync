name: Release

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Release Type'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
      force_build:
        description: 'Force build even if no version change'
        required: false
        default: false
        type: boolean

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: false # Don't cancel release process once started

jobs:
  # Generate version using semantic release
  version:
    name: Generate Version
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'
    uses: ./.github/workflows/version.yml
    with:
      release_type: ${{ github.event.inputs.release_type || '' }}
    secrets: inherit

  # Check if build is needed
  check-build-needed:
    name: Check if Build is Needed
    needs: [version]
    runs-on: ubuntu-latest
    outputs:
      build_needed: ${{ steps.check.outputs.build_needed }}
    steps:
      - name: Determine if build is needed
        id: check
        run: |
          # Build is needed if:
          # 1. New release was created
          # 2. This is a tag push (manual release)
          # 3. Forced build via workflow_dispatch
          if [[ "${{ needs.version.outputs.is_new_release }}" == "true" || 
                "${{ github.event_name }}" == "push" && "${{ startsWith(github.ref, 'refs/tags/v') }}" == "true" ||
                "${{ github.event.inputs.force_build }}" == "true" ]]; then
            echo "build_needed=true" >> $GITHUB_OUTPUT
            echo "Build is needed. Proceeding with build process."
          else
            echo "build_needed=false" >> $GITHUB_OUTPUT
            echo "No new version detected and build not forced. Skipping build process."
          fi

  # Build binaries only if needed
  build:
    name: Build Binaries
    needs: [version, check-build-needed]
    if: needs.check-build-needed.outputs.build_needed == 'true'
    uses: ./.github/workflows/build.yml
    with:
      version: ${{ needs.version.outputs.version || github.ref }}
    secrets: inherit

  # Publish release after building (only if build was performed)
  publish:
    name: Publish Release
    needs: [version, check-build-needed, build]
    if: needs.check-build-needed.outputs.build_needed == 'true' && needs.build.outputs.artifacts_created == 'true'
    uses: ./.github/workflows/publish.yml
    with:
      version: ${{ needs.version.outputs.version || github.ref }}
    secrets: inherit

  # Update install script with latest version (only for new releases)
  update-install:
    name: Update Install Script
    needs: [version, check-build-needed, publish]
    if: needs.check-build-needed.outputs.build_needed == 'true'
    uses: ./.github/workflows/update-install.yml
    with:
      version: ${{ needs.version.outputs.version }}
    secrets: inherit

  # Trigger Docker workflow after a successful release (only if build was performed)  
  trigger-docker:
    name: Trigger Docker Build
    needs: [version, check-build-needed, publish]
    if: needs.check-build-needed.outputs.build_needed == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Trigger Docker workflow
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GH_TOKEN }}
          script: |
            const version = '${{ needs.version.outputs.version || github.ref }}'.replace('refs/tags/', '');
            console.log(`Triggering Docker build for version: ${version}`);
            
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'docker.yml',
              ref: 'main',
              inputs: {
                version: version
              }
            });

  # Trigger Homebrew tap update workflow after a successful release
  trigger-homebrew-tap:
    name: Trigger Homebrew Tap Update
    needs: [version, check-build-needed, publish]
    if: needs.check-build-needed.outputs.build_needed == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Trigger Homebrew tap workflow
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GH_TOKEN }}
          script: |
            const version = '${{ needs.version.outputs.version || github.ref }}'.replace('refs/tags/', '');
            const versionWithoutV = version.replace(/^v/, '');
            console.log(`Triggering Homebrew tap update for version: ${versionWithoutV}`);
            
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'update-tap.yml',
              ref: 'main',
              inputs: {
                version: versionWithoutV
              }
            });